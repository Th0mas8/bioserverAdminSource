<?xml version="1.0" encoding="utf-8"?>

<!---
Główna funkcja aplikacji w której umieszczamy trzy główne elementy - logo, menu wraz z zawartością
i stopkę.
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="800" minHeight="600" 
			   xmlns:components="components.*"
			   xmlns:men="components.pages.admin_subpage.*"
			   backgroundColor="#000000"
			   creationComplete="application1_creationCompleteHandler(event)"
			   applicationComplete="application1_applicationCompleteHandler(event)"
			   skinClass="BackgroundColor" xmlns:pages="components.pages.*" 
			   bottom="15"
			   resize="application1_resizeHandler(event)"
			   >
	<fx:Style source="Bioserver.css"/>
	
	<s:states>  
		<s:State name="schowaneLogowanie"/>
		<s:State name="wysunieteLogowanie"/>
	</s:states>
	
	
	<s:transitions>
		
	</s:transitions>
	<!-- Styles ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	
	<!-- Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	<fx:Script>
		<![CDATA[
			import com.devaldi.controls.ZoomCanvas;
			
			import flash.events.ErrorEvent;
			
			import flashx.textLayout.tlf_internal;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.BrowserManager;
			import mx.managers.ISystemManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.igorcosta.hacks.*;
			
			import spark.components.BorderContainer;
			import spark.components.RichEditableText;
			import spark.skins.spark.BorderContainerSkin;
			
			private var adresStrony:String="";
			
			/**
			 * Funkcja zwracająca adres na którym bedzie umieszczona strona.
			 */ 
			public function getServerPath():String {
				
				//return adresStrony;
				//return "http://bioserver.uphero.com/";
				return "http://antares.cs.put.poznan.pl/bio/";
				//return "http://bioserver.cs.put.poznan.pl/";
				//return "http://cerber.cs.put.poznan.pl/~inf84884/";
				//return "http://localhost/";
				
			}
			
			
			/**
			 * Funkcja zwracająca string z miejscem gdzie będą przechowywane skrypty PHP.
			 */ 
			public function getPHPScriptsPath():String {
				return getServerPath()+"skrypty/"
				//return "http://localhost/php/";
			} 
			
			/**
			 * Funkcja zwracająca string z miejscem gdzie będą przechowywane zdjecia.
			 */
			public function getImgPath():String {
				return getServerPath()+"img/"
				//return "http://localhost/img/";
			}
			
			
			
			/**
			 * Funkcja zwracająca string z miejscem gdzie będą przechowywane swf od pdfow.
			 */
			public function getPDFPath():String {
				return getServerPath()+"pdf/"
			}
			
			/**
			 * Funkcja zwracająca string z miejscem gdzie będą przechowywane video.
			 */
			public function getVideoPath():String {
				return getServerPath()+"video/"
			}
			
			
			/**
			 * Tutaj obsługujemy wszystkie dotychczas niezłapane błędy na stronie.
			 */
			private function uncaughtErrorHandler(e:UncaughtErrorEvent):void {
				
				if (e.error is Error)
				{
					var error:Error = e.error as Error;
					Alert.show(error.toString(),"ERROR");
				}
				else if (e.error is ErrorEvent)
				{
					var errorEvent:ErrorEvent = e.error as ErrorEvent;
					Alert.show(errorEvent.text.toString(),"ERROR");
				}
				else
				{
					Alert.show(e.toString()+' \|/ '+e.text,"ERROR");
				}
				e.preventDefault();
				e.stopImmediatePropagation();
				e.stopPropagation();
			}
			
			/**
			 * Po załadowaniu strony dodajemy obsługę eventów - wystąpienai błędów i komunikacji przegladarka <-> strona
			 */
			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				//context.securityDomain = SecurityDomain.currentDomain;
				loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR,uncaughtErrorHandler);
				
			//	var swfik:SWF = new SWF();
				
				//const src: ByteArray = this.loaderInfo.bytes;;
				//Alert.show("<Error> " + src.toString(),"error");
				try
				{
					var d:Date = SWF.readCompilationDate(this.loaderInfo.bytes);
					versionText.text = d.toString();
				}
				catch (error:Error)
				{
					Alert.show("<Error> " + error.message,"error");
				}
			}


			/**
			 * Obsługujemy ręcznie scrollowanie, bo standardowe jest zbyt szybkie
			 */
			protected function vgroup1_mouseWheelHandler(event:MouseEvent):void
			{
				scroll.verticalScrollBar.value -= 8 *event.delta;
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}


			protected function application1_resizeHandler(event:ResizeEvent):void
			{
				this.validateNow();
				this.validateDisplayList();
			}


			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				adresStrony = "../";
			}

		]]>
	</fx:Script>
	
	<s:Scroller id="scroll" left="2" right="2" top="2" bottom="5" > 
		<s:VGroup width="100%" horizontalAlign="center" paddingTop="30" paddingBottom="15" mouseWheel="vgroup1_mouseWheelHandler(event)">
			
		
		<s:BorderContainer backgroundAlpha="0.0" width="70%" borderVisible="true" dropShadowVisible="true" 
						   borderWeight="5" borderColor="#363C36" cornerRadius="4">
			<s:VGroup id="tresc" textAlign="center" horizontalAlign="center" gap="10" 
					  horizontalCenter="0" bottom="0" paddingBottom="10" width="100%">
				
				<s:HGroup paddingLeft="20" horizontalAlign="center" textAlign="center" verticalAlign="middle" gap.schowaneLogowanie="0" paddingLeft.schowaneLogowanie="0" paddingRight.wysunieteLogowanie="15" width="100%">
					<components:logo id="logo"  width="100%"/>
				</s:HGroup>
				<pages:login width.schowaneLogowanie="100%" width="100%"/>				
			</s:VGroup>
		</s:BorderContainer>
		<s:Label id="versionText" fontSize="8"/>
		</s:VGroup>
	</s:Scroller> 
	
</s:Application>
